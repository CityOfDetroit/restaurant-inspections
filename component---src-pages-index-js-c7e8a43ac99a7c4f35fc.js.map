{"version":3,"sources":["webpack:///./src/components/search.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/cod-logo.jpg","webpack:///./src/components/seo.js","webpack:///./src/components/siteheader.js","webpack:///./src/components/layout.js"],"names":["SearchEstablishments","resetComponent","_this","setState","isLoading","results","value","handleResultSelect","e","_ref","result","name","handleSearchChange","_ref2","setTimeout","state","length","re","RegExp","_","escapeRegExp","filter","props","source","test","componentWillMount","this","render","_this$state","react_default","a","createElement","Search","Object","assign","input","fluid","size","placeholder","loading","onResultSelect","onSearchChange","debounce","leading","resultRenderer","_ref3","address","establishmentid","List","Item","key","Content","gatsby_browser_entry","to","Header","as","style","fontWeight","Description","Component","__webpack_require__","d","__webpack_exports__","query","IndexPage","data","layout","seo","title","keywords","fontSize","marginBottom","search","postgres","establishments","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","p","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","join","defaultProps","array","arrayOf","siteTitle","SiteHeader","borderBottom","margin","maxWidth","padding","display","justifyContent","alignItems","alignContent","flexWrap","Image","src","logo","height","alt","color","textDecoration","textAlign","Layout","Fragment","siteheader","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-c7e8a43ac99a7c4f35fc.js","sourcesContent":["import _ from 'lodash'\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { Search, List } from 'semantic-ui-react'\r\n\r\nclass SearchEstablishments extends Component {\r\n  componentWillMount() {\r\n    this.resetComponent()\r\n  }\r\n\r\n  resetComponent = () => this.setState({ isLoading: false, results: [], value: '' })\r\n\r\n  handleResultSelect = (e, { result }) => this.setState({ value: result.name })\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.resetComponent()\r\n\r\n      if(this.state.value.length > 0 && this.state.value.length < 3) { return; }\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = result => re.test(result.name)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(this.props.source, isMatch),\r\n      })\r\n    }, 300)\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, value, results } = this.state\r\n    \r\n    const resRender = ({ name, address, establishmentid }) => (\r\n      <List.Item key={establishmentid}>\r\n        <List.Content>\r\n          <Link to={`/establishment/${establishmentid}`}>\r\n            <List.Header as='a' style={{ fontWeight: 700 }}>{name}</List.Header>\r\n            <List.Description>{address}</List.Description>\r\n          </Link>\r\n        </List.Content>\r\n      </List.Item>\r\n    )\r\n\r\n    return (\r\n      <Search\r\n        input={{ fluid: true }}\r\n        fluid\r\n        size='large'\r\n        placeholder=\"Search by name...\"\r\n        loading={isLoading}\r\n        onResultSelect={this.handleResultSelect}\r\n        onSearchChange={_.debounce(this.handleSearchChange, 500, { leading: true })}\r\n        results={results}\r\n        resultRenderer={resRender}\r\n        value={value}\r\n        {...this.props}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchEstablishments\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport SearchEstablishments from \"../components/search\"\r\n\r\nconst IndexPage = ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" keywords={[`restaurant`, `inspections`, `detroit`]} />\r\n      <section style={{ fontSize: '1.25em', marginBottom: '1.5em' }}>\r\n        <p>\r\n          Explore information about restaurant inspections from the Detroit Health Department.\r\n        </p>\r\n      </section>\r\n      <SearchEstablishments source={data.postgres.establishments} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n query IndexPageQuery {\r\n  postgres {\r\n    establishments: allEstablishmentsList {\r\n      establishmentid\r\n      name\r\n      address\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/cod-logo-3c15a0bdecbe50211480e8b9b7a32701.jpg\";","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { Image, Header, Icon } from 'semantic-ui-react';\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport  logo  from '../images/cod-logo.jpg'\r\n\r\nconst SiteHeader = ({ siteTitle }) => (\r\n  <header style={{ borderBottom: `4px solid #feb70d`, marginBottom: `1.5rem` }}>\r\n    <div style={{ margin: `0 auto`, maxWidth: 960, padding: `1rem 1rem`, display: 'flex', justifyContent: 'space-between', alignItems: 'center', alignContent: 'middle', flexWrap: 'wrap' }}>\r\n      <div style={{display: 'flex', alignItems: 'center'}}>\r\n        \r\n        <Image src={logo} style={{padding: 0, margin: 0, height: 50}} alt='city logo'/>\r\n      <Link to=\"/\" style={{ color: `black`, textDecoration: `none`, textAlign: 'right' }}>\r\n        <Header as={'h2'}>{siteTitle}</Header>\r\n      </Link>\r\n        </div>\r\n      <Link to=\"/about\" style={{ color: `black`, textDecoration: `none` }}>\r\n        ABOUT\r\n      </Link>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default SiteHeader;\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n// import { Header } from 'det-header-test'\r\n\r\nimport SiteHeader from \"./siteheader\"\r\nimport 'semantic-ui-less/semantic.less'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        {/* <Header /> */}\r\n        <SiteHeader siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}