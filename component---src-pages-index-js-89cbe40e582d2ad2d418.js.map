{"version":3,"sources":["webpack:///./src/components/search.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["SearchEstablishments","resetComponent","_this","setState","isLoading","results","value","handleResultSelect","e","_ref","result","name","handleSearchChange","_ref2","setTimeout","state","length","re","RegExp","_","escapeRegExp","filter","props","source","test","componentWillMount","this","render","_this$state","react_default","a","createElement","Search","Object","assign","fluid","size","placeholder","loading","onResultSelect","onSearchChange","debounce","leading","resultRenderer","_ref3","address","establishmentid","List","Item","key","Content","gatsby_browser_entry","to","Header","style","fontWeight","Description","Component","__webpack_require__","d","__webpack_exports__","query","IndexPage","data","layout","seo","title","keywords","fontSize","marginBottom","display","flexDirection","justifyContent","search","postgres","establishments","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","siteTitle","borderBottom","margin","maxWidth","padding","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","paddingTop","_755544856","node","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-89cbe40e582d2ad2d418.js","sourcesContent":["import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport { Search, List } from 'semantic-ui-react'\n\nclass SearchEstablishments extends Component {\n  componentWillMount() {\n    this.resetComponent()\n  }\n\n  resetComponent = () => this.setState({ isLoading: false, results: [], value: '' })\n\n  handleResultSelect = (e, { result }) => this.setState({ value: result.name })\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.resetComponent()\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n      const isMatch = result => re.test(result.name)\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(this.props.source, isMatch),\n      })\n    }, 300)\n  }\n\n  render() {\n    const { isLoading, value, results } = this.state\n    \n    const resRender = ({ name, address, establishmentid }) => (\n      <List.Item key={establishmentid}>\n        <List.Content>\n          <Link to={`/establishment/${establishmentid}`}>\n            <List.Header style={{ fontWeight: 700 }}>{name}</List.Header>\n            <List.Description>{address}</List.Description>\n          </Link>\n        </List.Content>\n      </List.Item>\n    )\n\n    return (\n      <Search\n        fluid\n        size='large'\n        placeholder=\"Search by name...\"\n        loading={isLoading}\n        onResultSelect={this.handleResultSelect}\n        onSearchChange={_.debounce(this.handleSearchChange, 500, { leading: true })}\n        results={results}\n        resultRenderer={resRender}\n        value={value}\n        {...this.props}\n      />\n    )\n  }\n}\n\nexport default SearchEstablishments\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Container } from \"semantic-ui-react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport SearchEstablishments from \"../components/search\"\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Home\" keywords={[`restaurant`, `inspections`, `detroit`]} />\n      <section style={{ fontSize: '1.25em', marginBottom: '1.5em' }}>\n        <p>\n          Explore information about restaurant inspections made available through Detroit's open data portal.\n        </p>\n        <p>\n          This data includes restaurants and other food service establishments, like school cafeterias or stadium concessions, that are inspected by the Detroit Health Department.\n        </p>\n      </section>\n      <section style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n        <SearchEstablishments source={data.postgres.establishments} />\n      </section>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n query IndexPageQuery {\n  postgres {\n    establishments: allEstablishmentsList {\n      establishmentid\n      name\n      address\n    }\n  }\n}\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      borderBottom: `3px solid #feb70d`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            textDecoration: `none`,\n            fontWeight: 900,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n// import \"./layout.css\"\nimport 'semantic-ui-less/semantic.less'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}